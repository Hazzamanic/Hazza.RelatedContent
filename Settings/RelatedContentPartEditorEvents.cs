using System.Collections.Generic;
using System.Globalization;
using Orchard.ContentManagement;
using Orchard.ContentManagement.MetaData;
using Orchard.ContentManagement.MetaData.Builders;
using Orchard.ContentManagement.MetaData.Models;
using Orchard.ContentManagement.ViewModels;

// This code was generated by Orchardizer
namespace Hazza.RelatedContent.Settings
{
    public class RelatedContentPartEditorEvents : ContentDefinitionEditorEventsBase
    {
        public override IEnumerable<TemplateViewModel> TypePartEditor(ContentTypePartDefinition definition)
        {
            if (definition.PartDefinition.Name == "RelatedContentPart")
            {
                var model = definition.Settings.GetModel<RelatedContentPartSettings>();
                yield return DefinitionTemplate(model);
            }
        }

        public override IEnumerable<TemplateViewModel> TypePartEditorUpdate(ContentTypePartDefinitionBuilder builder, IUpdateModel updateModel) {
            if (builder.Name != "RelatedContentPart")
                yield break;

            var settings = new RelatedContentPartSettings {};

            if (updateModel.TryUpdateModel(settings, "RelatedContentPartSettings", null, null)) {
				builder.WithSetting("RelatedContentPartSettings.Index", settings.Index);
				builder.WithSetting("RelatedContentPartSettings.Fields", settings.Fields);
				builder.WithSetting("RelatedContentPartSettings.NoOfItems", settings.NoOfItems.ToString(CultureInfo.InvariantCulture));
				builder.WithSetting("RelatedContentPartSettings.ContentType", settings.ContentType);
			}

            yield return DefinitionTemplate(settings);
        }
    }
}